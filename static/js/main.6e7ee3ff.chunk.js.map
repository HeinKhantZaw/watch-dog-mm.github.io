{"version":3,"sources":["ChangeView.js","icons/person.svg","icons/police.svg","icons/bearer.svg","icons/index.js","Components/marker.js","config.js","App.js","reportWebVitals.js","index.js"],"names":["ChangeView","center","zoom","useMap","setView","PersonIcon","L","Icon","iconUrl","person","iconRetinaUrl","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","Point","className","PoliceIcon","divIcon","police","BearerIcon","bearer","PersonMarker","position","message","Marker","icon","Popup","PoliceMarker","BearerMarker","MapMarker","type","console","log","lat","lng","config","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","App","useState","latlng","setlatlng","useEffect","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","firebase","onChange","e","parseFloat","target","value","split","selected","MapContainer","style","height","scrollWheelZoom","TileLayer","attribution","url","path","d","isLoading","Array","isArray","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e7ee3ff.chunk.js","sourcesContent":["import { useMap } from \"react-leaflet\";\n\nexport function ChangeView({ center, zoom }) {\n  const map = useMap();\n  map.setView(center, zoom);\n  return null;\n}\n","export default __webpack_public_path__ + \"static/media/person.f487c13b.svg\";","export default __webpack_public_path__ + \"static/media/police.7ea03219.svg\";","export default __webpack_public_path__ + \"static/media/bearer.56672884.svg\";","import L from \"leaflet\";\nimport person from \"./person.svg\";\nimport police from \"./police.svg\";\nimport bearer from \"./bearer.svg\";\n\nexport const PersonIcon = new L.Icon({\n  iconUrl: person,\n  iconRetinaUrl: person,\n  iconAnchor: null,\n  popupAnchor: [-3, -20],\n  shadowUrl: null,\n  shadowSize: null,\n  shadowAnchor: null,\n  iconSize: new L.Point(25, 30),\n  className: \"leaflet-div-personicon\",\n});\n\nexport const PoliceIcon = new L.divIcon({\n  iconUrl: police,\n  iconRetinaUrl: police,\n  iconAnchor: null,\n  popupAnchor: [-3, -20],\n  shadowUrl: null,\n  shadowSize: null,\n  shadowAnchor: null,\n  iconSize: new L.Point(25, 25),\n  className: \"leaflet-div-police circle\",\n});\n\nexport const BearerIcon = new L.Icon({\n  iconUrl: bearer,\n  iconRetinaUrl: bearer,\n  iconAnchor: null,\n  popupAnchor: [-3, -20],\n  shadowUrl: null,\n  shadowSize: null,\n  shadowAnchor: null,\n  iconSize: new L.Point(25, 40),\n  className: \"leaflet-div-bearer\",\n});\n","import { Marker, Popup } from \"react-leaflet\";\nimport { PersonIcon, PoliceIcon, BearerIcon } from \"../icons/index\";\n\nexport const PersonMarker = ({ position, message }) => {\n  return (\n    <Marker position={position} icon={PersonIcon}>\n      <Popup>{message}</Popup>\n    </Marker>\n  );\n};\n\nconst PoliceMarker = ({ position, message }) => {\n  return (\n    <Marker position={position} icon={PoliceIcon}>\n      <Popup>{message}</Popup>\n    </Marker>\n  );\n};\nconst BearerMarker = ({ position, message }) => {\n  return (\n    <Marker position={position} icon={BearerIcon}>\n      <Popup>{message}</Popup>\n    </Marker>\n  );\n};\n\nconst MapMarker = ({ type, position, message }) => {\n  console.log(type);\n  return (\n    <>\n      {type === \"pol\" && (\n        <PoliceMarker\n          position={[position.lat, position.lng]}\n          message={message}\n        />\n      )}\n      {type === \"bearer\" && (\n        <BearerMarker\n          position={[position.lat, position.lng]}\n          message={message}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MapMarker;\n","export const config = {\n  // DO NOT USE THESE CREDENTIALS ! THEY ARE HERE TO HELP IN THE LEARNING PROCESS.\n  // ANY AND ALL DATA ON THAT DOMAIN IS SUBJECT TO CHANGE AND REMOVAL AT ANY TIME\n  // THIS ACCOUNT IS ALSO ON THE FREE PLAN AND IS SUBJECT TO RESTRICTIONS !\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n","import \"./App.css\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport { useEffect, useState } from \"react\";\nimport { ChangeView } from \"./ChangeView\";\nimport MapMarker, { PersonMarker } from \"./Components/marker\";\nimport firebase from \"firebase\";\nimport { config } from \"./config\";\nimport {\n  FirebaseDatabaseNode,\n  FirebaseDatabaseProvider,\n} from \"@react-firebase/database\";\n\nfunction App() {\n  const [latlng, setlatlng] = useState({ lat: 16.8409, lng: 96.1735 });\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setlatlng({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      });\n    });\n  }, []);\n\n  return (\n    <>\n      <FirebaseDatabaseProvider firebase={firebase} {...config}>\n        <select\n          onChange={(e) => {\n            setlatlng({\n              lat: parseFloat(e.target.value.split(\"|\")[0]),\n              lng: parseFloat(e.target.value.split(\"|\")[1]),\n            });\n          }}\n        >\n          <option value=\"16.8409|96.1735\" selected>\n            Yangon\n          </option>\n          <option value=\"21.9588|96.0891\">Mandalay</option>\n          <option value=\"19.7633|96.0785\">Naypyi Daw</option>\n        </select>\n        <MapContainer\n          style={{ height: `100vh` }}\n          center={[latlng.lat, latlng.lng]}\n          zoom={13}\n          scrollWheelZoom={false}\n        >\n          <ChangeView center={[latlng.lat, latlng.lng]} zoom={13} />\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <PersonMarker\n            position={[latlng.lat, latlng.lng]}\n            message=\"This is your current location\"\n          />\n          <FirebaseDatabaseNode\n            path=\"locations\"\n            // orderByKey\n          >\n            {(d) => {\n              console.log(d);\n              return (\n                <>\n                  {!d.isLoading &&\n                    Array.isArray(d.value) &&\n                    d.value.map((item) => {\n                      console.log(item);\n                      return <MapMarker {...item} />;\n                    })}\n                </>\n              );\n            }}\n          </FirebaseDatabaseNode>\n        </MapContainer>\n      </FirebaseDatabaseProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}