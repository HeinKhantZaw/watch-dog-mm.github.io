{"version":3,"sources":["logo.svg","ChangeView.js","App.js","reportWebVitals.js","index.js"],"names":["ChangeView","center","zoom","useMap","setView","App","useState","lat","lng","latlng","setlatlng","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onChange","e","parseFloat","target","value","split","selected","MapContainer","style","height","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,I,6CCER,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAGnC,OAFYC,cACRC,QAAQH,EAAQC,GACb,K,WCgDMG,MA/Cf,WAAgB,IAAD,EACeC,mBAAS,CAAEC,IAAK,QAASC,IAAK,SAD7C,mBACNC,EADM,KACEC,EADF,KAYb,OATAC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAAUC,GACjDL,EAAU,CACRH,IAAKQ,EAASC,OAAOC,SACrBT,IAAKO,EAASC,OAAOE,iBAGxB,CAACT,IAGF,qCACE,yBACEU,SAAU,SAACC,GACTV,EAAU,CACRH,IAAKc,WAAWD,EAAEE,OAAOC,MAAMC,MAAM,KAAK,IAC1ChB,IAAKa,WAAWD,EAAEE,OAAOC,MAAMC,MAAM,KAAK,OAJhD,UAQE,wBAAQD,MAAM,kBAAd,oBACA,wBAAQA,MAAM,kBAAkBE,UAAQ,EAAxC,sBAGA,wBAAQF,MAAM,kBAAd,2BAEF,eAACG,EAAA,EAAD,CACEC,MAAO,CAAEC,OAAO,SAChB3B,OAAQ,CAACQ,EAAOF,IAAKE,EAAOD,KAC5BN,KAAM,GACN2B,iBAAiB,EAJnB,UAME,cAAC7B,EAAD,CAAYC,OAAQ,CAACQ,EAAOF,IAAKE,EAAOD,KAAMN,KAAM,KACpD,cAAC4B,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQlB,SAAU,CAACN,EAAOF,IAAKE,EAAOD,KAAtC,SACE,cAAC0B,EAAA,EAAD,6CClCKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.334fe5c5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useMap } from \"react-leaflet\";\n\nexport function ChangeView({ center, zoom }) {\n  const map = useMap();\n  map.setView(center, zoom);\n  return null;\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { useEffect, useState } from \"react\";\nimport { ChangeView } from \"./ChangeView\";\n\nfunction App() {\n  const [latlng, setlatlng] = useState({ lat: 21.9162, lng: 95.956 });\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setlatlng({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      });\n    });\n  }, [latlng]);\n\n  return (\n    <>\n      <select\n        onChange={(e) => {\n          setlatlng({\n            lat: parseFloat(e.target.value.split(\"|\")[0]),\n            lng: parseFloat(e.target.value.split(\"|\")[1]),\n          });\n        }}\n      >\n        <option value=\"16.8409|96.1735\">Yangon</option>\n        <option value=\"21.9588|96.0891\" selected>\n          Mandalay\n        </option>\n        <option value=\"19.7633|96.0785\">Naypyi Daw</option>\n      </select>\n      <MapContainer\n        style={{ height: `100vh` }}\n        center={[latlng.lat, latlng.lng]}\n        zoom={13}\n        scrollWheelZoom={false}\n      >\n        <ChangeView center={[latlng.lat, latlng.lng]} zoom={13} />\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={[latlng.lat, latlng.lng]}>\n          <Popup>This is your location</Popup>\n        </Marker>\n      </MapContainer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}